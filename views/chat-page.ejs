<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Group Chat</title>
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        .chat-container {
            display: flex;
            height: 100vh;
        }

        .sidebar {
            width: 25%;
            background-color: #f8f9fa;
            padding: 20px;
            border-right: 1px solid #ddd;
        }

        .chat-box {
            width: 75%;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .message-list {
            flex-grow: 1;
            overflow-y: auto;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }

        .message {
            display: flex;
            flex-direction: column; /* Stack the username and message vertically */
            margin: 5px 0; /* Add some spacing between messages */
            padding: 10px; /* Add padding for a better appearance */
            max-width: 80%; /* Limit the width */
            border-radius: 8px; /* Add rounded corners */
        }

        .message.other {
            align-self: flex-end; /* Align to the right */
            background-color: #f8d7da; /* Optional: background color for other messages */
        }

        .message.user {
            align-self: flex-start; /* Align to the left for user messages */
            background-color: transparent; /* No background color for user's messages */
        }

        .username {
            font-weight: bold;
            margin: 5px 0; /* Space between username and message */
        }
        
        #user-list {
            max-height: 20rem; /* Adjust height as needed */
            overflow-y:auto;
        }
        
        .timestamp {
            font-size: 0.8rem;
            color: #6c757d;
            text-align: right;
        }
    </style>
</head>
<body>

<div class="container-fluid chat-container">
    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Button to open the modal -->
        <a href="/user/chats" class="btn btn-primary">Back</a>
        <% if(is_group == 1){ %>
            <h6>Group Info:</h6>
            <p id="group-description"><%= group_description %></p>
            <!-- User List Section -->
            <h6>Chat Members:</h6>
            <ul id="user-list" class="list-group">
                <% chat_group_users_list.forEach(user => { %>
                    <li class="list-group-item">
                        <a href="/user/user-profile/<%= user.id %>" target="_blank"><%= user.username %></a>
                        <% if(user.is_self == '1'){ %>
                            <span class="badge bg-primary ms-2">You</span>
                        <% } %>
                    </li>
                <% }); %>
            </ul>
        <% } else { %>
            <h6>Private Chat Members:</h6>
            <ul id="user-list" class="list-group">
                <% chat_group_users_list.forEach(user => { %>
                    <li class="list-group-item">
                        <a href="/user/user-profile/<%= user.id %>" target="_blank"><%= user.username %></a>
                        <% if(user.is_self == '1'){ %>
                            <span class="badge bg-primary ms-2">You</span>
                        <% } %>
                    </li>
                <% }); %>
            </ul>
        <% } %>
    </div>

    <!-- Chat Box -->
    <div class="chat-box">
        <!-- Group Name Display -->
        <% if(is_group == 1){ %>
            <h4 class="text-center border border-primary p-2 rounded mb-3">
                <span id="group-name"><%= chat_group_name %></span>
            </h4>
        <% } %>
        
        <div class="message-list" id="message-list">
        </div>
    
        <% if(is_present_in_group == 1){ %>
            <!-- Message Input -->
            <form id="chat-form" class="d-flex">
                <input type="text" class="form-control me-2" id="message" placeholder="Type your message here..." required>
                <button type="submit" class="btn btn-primary">Send</button>
            </form>
        <% } %>
    </div>
</div>

<!-- Optional JavaScript -->
<script src="/js/bootstrap.bundle.min.js"></script>
<script>
    var url_array = location.href.split('/');
    const chat_id = url_array[url_array.length - 1];
    const user_id = <%= user.id %>;
    const messageList = document.getElementById('message-list');
    document.addEventListener('DOMContentLoaded', (event) => {
        const socket = io({
            reconnection: true,
            reconnectionAttempts: Infinity,
            reconnectionDelay: 1000,   
            reconnectionDelayMax: 5000
        });
        socket.emit("joinChatGroup", chat_id);
        
        /* get and set the previous chat records */
        var user_chat_credentials = {};
        user_chat_credentials.chat_id = chat_id;
        user_chat_credentials.user_id = user_id;
        socket.emit("getChatGroupMessages", user_chat_credentials);
        var messages = "";
        socket.on("messagesOfChatGroup", (data)=>{
            messages = data;
            // Display Messages
            appendMessages(messages);
        });
        
        function appendMessages(messages){
            messages.forEach(msg => {
                const newMessage = document.createElement('div');
                newMessage.classList.add('message', (msg.user_id === user_id) ? 'user' : 'other');
                
                var username = "";
                if(msg.user_id != user_id){
                    username = document.createElement('a');
                    username.classList.add('username'); // You can style this class in CSS
                    username.href = "/user/user-profile/"+msg.user_id;
                    username.target = "_blank";
                } else {
                    username = document.createElement('div');
                    username.classList.add('username'); // You can style this class in CSS
                }
                username.innerText = msg.chat_of_user; // Assuming message.username contains the username
                
                const messageContent = document.createElement('span');
                messageContent.innerText = msg.message;
                const timestamp = document.createElement('div');
                timestamp.classList.add('timestamp');
                timestamp.innerText = msg.created_on;

                // Append the username and message to the newMessage div
                newMessage.appendChild(username);
                newMessage.appendChild(messageContent);
                newMessage.appendChild(timestamp);
                // Add the message to the message list
                messageList.appendChild(newMessage);
            });
        }

        // Submit Message (Handle new message input)
        document.getElementById('chat-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const messageInput = document.getElementById('message');
            const message = messageInput.value.trim();

            if (message) {
                let msg_data = {};
                msg_data.message = message;
                msg_data.roomID = chat_id;
                msg_data.user_id = user_id;
                socket.emit('chat message', msg_data); // Send message to server

                // Clear input field
                messageInput.value = '';
            }
        });

        socket.on("chat message", (message) => {
            const newMessage = document.createElement('div');
            newMessage.classList.add('message', (message.user_id === user_id) ? 'user' : 'other');
            var username = "";
            if(message.user_id != user_id){
                username = document.createElement('a');
                username.classList.add('username'); // You can style this class in CSS
                username.href = "/user/user-profile/"+message.user_id;
                username.target = "_blank";
            } else {
                username = document.createElement('div');
                username.classList.add('username'); // You can style this class in CSS
            }
            username.innerText = message.chat_of_user; // Assuming message.username contains the username
            const messageContent = document.createElement('div');
            messageContent.innerText = message.message;
            const timestamp = document.createElement('div');
            timestamp.classList.add('timestamp');
            const created_on = new Date();
            timestamp.innerText = created_on.toUTCString().replace("GMT", "");

            // Append the username and message to the newMessage div
            newMessage.appendChild(username);
            newMessage.appendChild(messageContent);
            newMessage.appendChild(timestamp);
            // Add the message to the message list
            messageList.appendChild(newMessage);
            // Scroll to bottom of the chat
            messageList.scrollTop = messageList.scrollHeight;
        });

        socket.on('disconnect', () => {
          socket.connect();
        });
    });
</script>

</body>
</html>
