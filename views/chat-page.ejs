<!DOCTYPE html>
<html lang="en">
    
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Group Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        .chat-container {
            display: flex;
            height: 100vh;
        }
        .sidebar {
            width: 25%;
            background-color: #f8f9fa;
            padding: 20px;
            border-right: 1px solid #ddd;
        }
        .chat-box {
            width: 75%;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }
        .message-list {
            flex-grow: 1;
            overflow-y: auto;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }
        .message {
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 10px;
        }
        .message.user {
            background-color: #d1e7dd;
            align-self: flex-end;
        }
        .message.other {
            background-color: #f8d7da;
            align-self: flex-start;
        }
    </style>
</head>
<body>

<div class="container-fluid chat-container">
    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Button to open the modal -->
        <a href="/user/chats" class="btn btn-primary">
            Back
        </a>
        <h4>Group Name: <span id="group-name"><%= chat_group_name %></span></h4>
        <h6>Welcome, <span id="username"><%= user.name %></span></h6>
    </div>

    <!-- Chat Box -->
    <div class="chat-box">
        <div class="message-list" id="message-list">
            <!-- Messages will be appended here -->
            <div class="message other">Hello, how are you?</div>
            <div class="message user">I am fine, thanks!</div>
            <!-- New messages will be loaded dynamically -->
        </div>

        <!-- Message Input -->
        <form id="chat-form" class="d-flex">
            <input type="text" class="form-control me-2" id="message" placeholder="Type your message here..." required>
            <button type="submit" class="btn btn-primary">Send</button>
        </form>
    </div>
</div>

<!-- Optional JavaScript -->

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Simulated data (you can replace with actual server data)
    // const groupName = "Group A";
    // const username = "User123";
    var url_array = location.href.split('/');
    const chat_id = url_array[url_array.length - 1];
    document.addEventListener('DOMContentLoaded', (event) => {
        const socket = io();
        socket.emit("joinChatGroup", chat_id);
        const messages = [
            { user: 'User123', message: 'Hi there!', self: true },
            { user: 'User456', message: 'Hello!', self: false },
            { user: 'User123', message: 'Howâ€™s it going?', self: true }
        ];

        // Display Group Name and Username
        // document.getElementById('group-name').innerText = groupName;
        // document.getElementById('username').innerText = username;

        // Display Messages
        const messageList = document.getElementById('message-list');
        messages.forEach(msg => {
            const msgElement = document.createElement('div');
            msgElement.classList.add('message', msg.self ? 'user' : 'other');
            msgElement.innerText = msg.message;
            messageList.appendChild(msgElement);
        });

        // Submit Message (Handle new message input)
        document.getElementById('chat-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const messageInput = document.getElementById('message');
            const message = messageInput.value.trim();

            if (message) {
                
                // console.log(chat_id);
                let msg_data = {};
                msg_data.message = message;
                msg_data.roomID = chat_id;
                socket.emit('chat message', msg_data); // Send message to server
                

                // Clear input field
                messageInput.value = '';
            }
        });
        socket.on("chat message", (message)=>{
            // console.log(message);
            // Append the new message to the list
            const newMessage = document.createElement('div');
            newMessage.classList.add('message', 'user');
            newMessage.innerText = message;
            messageList.appendChild(newMessage);

            // Scroll to bottom of the chat
            messageList.scrollTop = messageList.scrollHeight;
        })
    });
</script>

</body>
</html>
